# sp_android = {
# 	specialization = specialization_nuclear
# 	icon = GFX_sp_android
# 	project_tags = { 
# 		sp_tag_ATRI
# 	}

# 	allowed = { FROM = { tag = DVL } }
# 	available = {
# 		FROM = {
# 		}
# 	}

# 	prototype_time = sp_time.prototype.short
# 	complexity = sp_complexity.small
# 	resource_cost = {
# 		resources = { steel=6 tungsten=3 chromium=6 }
# 	}

# 	project_output = {
# 	}

# 	generic_prototype_rewards = {
# 	}

# 	unique_prototype_rewards = {
# 	}
# }

# sp_artificial_intelligence = {
# 	specialization = specialization_nuclear
# 	icon = GFX_sp_artificial_intelligence
# 	project_tags = { 
# 		sp_tag_ATRI
# 	}

# 	allowed = { FROM = { tag = DVL } }
# 	available = {
# 		FROM = {
# 		}
# 	}

# 	prototype_time = sp_time.prototype.short
# 	complexity = sp_complexity.small
# 	resource_cost = {
# 		resources = { steel=6 tungsten=3 chromium=6 }
# 	}

# 	project_output = {
# 	}

# 	generic_prototype_rewards = {
# 	}

# 	unique_prototype_rewards = {
# 	}
# }

# sp_ATRI_reverse_study = {
# 	specialization = specialization_nuclear
# 	icon = GFX_sp_ATRI_reverse_study
# 	project_tags = { 
# 		sp_tag_ATRI
# 	}

# 	allowed = { FROM = { tag = DVL } }
# 	available = {
# 		FROM = {
# 		}
# 	}

# 	prototype_time = sp_time.prototype.short
# 	complexity = sp_complexity.small
# 	resource_cost = {
# 		resources = { steel=6 tungsten=3 chromium=6 }
# 	}

# 	project_output = {
# 	}

# 	generic_prototype_rewards = {
# 	}

# 	unique_prototype_rewards = {
# 	}
# }

# sp_biomimetic_neural_network = {
# 	specialization = specialization_nuclear
# 	icon = GFX_sp_biomimetic_neural_network
# 	project_tags = { 
# 		sp_tag_ATRI
# 	}

# 	allowed = { FROM = { tag = DVL } }
# 	available = {
# 		FROM = {
# 		}
# 	}

# 	prototype_time = sp_time.prototype.short
# 	complexity = sp_complexity.small
# 	resource_cost = {
# 		resources = { steel=6 tungsten=3 chromium=6 }
# 	}

# 	project_output = {
# 	}

# 	generic_prototype_rewards = {
# 	}

# 	unique_prototype_rewards = {
# 	}
# }

# sp_computing_power_leaps = {
# 	specialization = specialization_nuclear
# 	icon = GFX_sp_computing_power_leaps
# 	project_tags = { 
# 		sp_tag_ATRI
# 	}

# 	allowed = { FROM = { tag = DVL } }
# 	available = {
# 		FROM = {
# 		}
# 	}

# 	prototype_time = sp_time.prototype.short
# 	complexity = sp_complexity.small
# 	resource_cost = {
# 		resources = { steel=6 tungsten=3 chromium=6 }
# 	}

# 	project_output = {
# 	}

# 	generic_prototype_rewards = {
# 	}

# 	unique_prototype_rewards = {
# 	}
# }

# sp_electric_screens = {
# 	specialization = specialization_nuclear
# 	icon = GFX_sp_electric_screens
# 	project_tags = { 
# 		sp_tag_ATRI
# 	}

# 	allowed = { FROM = { tag = DVL } }
# 	available = {
# 		FROM = {
# 		}
# 	}

# 	prototype_time = sp_time.prototype.short
# 	complexity = sp_complexity.small
# 	resource_cost = {
# 		resources = { steel=6 tungsten=3 chromium=6 }
# 	}

# 	project_output = {
# 	}

# 	generic_prototype_rewards = {
# 	}

# 	unique_prototype_rewards = {
# 	}
# }

# sp_materials_science = {
# 	specialization = specialization_nuclear
# 	icon = GFX_sp_materials_science
# 	project_tags = { 
# 		sp_tag_ATRI
# 	}

# 	allowed = { FROM = { tag = DVL } }
# 	available = {
# 		FROM = {
# 		}
# 	}

# 	prototype_time = sp_time.prototype.short
# 	complexity = sp_complexity.small
# 	resource_cost = {
# 		resources = { steel=6 tungsten=3 chromium=6 }
# 	}

# 	project_output = {
# 	}

# 	generic_prototype_rewards = {
# 	}

# 	unique_prototype_rewards = {
# 	}
# }

# sp_neural_network_connections = {
# 	specialization = specialization_nuclear
# 	icon = GFX_sp_neural_network_connections
# 	project_tags = { 
# 		sp_tag_ATRI
# 	}

# 	allowed = { FROM = { tag = DVL } }
# 	available = {
# 		FROM = {
# 		}
# 	}

# 	prototype_time = sp_time.prototype.short
# 	complexity = sp_complexity.small
# 	resource_cost = {
# 		resources = { steel=6 tungsten=3 chromium=6 }
# 	}

# 	project_output = {
# 	}

# 	generic_prototype_rewards = {
# 	}

# 	unique_prototype_rewards = {
# 	}
# }

# sp_transistor = {
# 	specialization = specialization_nuclear
# 	icon = GFX_sp_transistor
# 	project_tags = { 
# 		sp_tag_ATRI
# 	}

# 	allowed = { FROM = { tag = DVL } }
# 	available = {
# 		FROM = {
# 		}
# 	}

# 	prototype_time = sp_time.prototype.short
# 	complexity = sp_complexity.small
# 	resource_cost = {
# 		resources = { steel=6 tungsten=3 chromium=6 }
# 	}

# 	project_output = {
# 	}

# 	generic_prototype_rewards = {
# 	}

# 	unique_prototype_rewards = {
# 	}
# }