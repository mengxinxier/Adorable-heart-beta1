#### 提升地区类型 ####
SOV_promote_regional_development = {
	if = {
		limit = {
			has_state_category = zero_island
		}
	    set_state_category = one_island
	}
	else_if = {
		limit = {
			has_state_category = wasteland
		}
	    set_state_category = zero
	}
	else_if = {
		limit = {
			has_state_category = zero
		}
	    set_state_category = one
	}
	else_if = {
		limit = {
			has_state_category = one
		}
		set_state_category =  two

	}
	else_if = {
		limit = {
			has_state_category = two
		}
		set_state_category = three

	}
	else_if = {
		limit = {
			has_state_category = three
		}
		set_state_category = four
	}
	else_if = {
		limit = {
			has_state_category = four
		}
		set_state_category = five
	}
	else_if = {
		limit = {
			has_state_category = five
		}
		set_state_category = six
	}
	else_if = {
		limit = {
			has_state_category = six
		}
		set_state_category = seven
	}
	else_if = {
		limit = {
			has_state_category = seven
		}
		set_state_category = eight
	}
	else_if = {
		limit = {
			has_state_category = eight
		}
		set_state_category = nine
	}
	else_if = {
		limit = {
			has_state_category = nine
		}
		set_state_category = ten
	}
	else_if = {
		limit = {
			has_state_category = ten
		}
		set_state_category = eleven
	}
	else_if = {
		limit = {
			has_state_category = eleven
		}
		set_state_category = twelve
	}
	else_if = {
		limit = {
			has_state_category = twelve
		}
		add_extra_state_shared_building_slots = 1
	}
}

#### 瘟疫削减 ####
SOV_deal_with_plague_reduce = {
	if = {
		limit = { has_idea = SOV_spread_of_plague5 }
		swap_ideas = {
			remove_idea = SOV_spread_of_plague5
			add_idea = SOV_spread_of_plague4
		}
	}
	else_if = {
		limit = { has_idea = SOV_spread_of_plague4 }
		swap_ideas = {
			remove_idea = SOV_spread_of_plague4
			add_idea = SOV_spread_of_plague3
		}
	}
	else_if = {
		limit = { has_idea = SOV_spread_of_plague3 }
		swap_ideas = {
			remove_idea = SOV_spread_of_plague3
			add_idea = SOV_spread_of_plague2
		}
	}
	else_if = {
		limit = { has_idea = SOV_spread_of_plague2 }
		swap_ideas = {
			remove_idea = SOV_spread_of_plague2
			add_idea = SOV_spread_of_plague
		}
	}
}

#### 瘟疫恶化 ####
SOV_deal_with_plague_deteriorate = {
	if = {
		limit = { has_idea = SOV_spread_of_plague }
		swap_ideas = {
			remove_idea = SOV_spread_of_plague
			add_idea = SOV_spread_of_plague2
		}
	}
	else_if = {
		limit = { has_idea = SOV_spread_of_plague2 }
		swap_ideas = {
			remove_idea = SOV_spread_of_plague2
			add_idea = SOV_spread_of_plague3
		}
	}
	else_if = {
		limit = { has_idea = SOV_spread_of_plague3 }
		swap_ideas = {
			remove_idea = SOV_spread_of_plague3
			add_idea = SOV_spread_of_plague4
		}
	}
	else_if = {
		limit = { has_idea = SOV_spread_of_plague4 }
		swap_ideas = {
			remove_idea = SOV_spread_of_plague4
			add_idea = SOV_spread_of_plague5
		}
	}
	else_if = {
		limit = { has_idea = SOV_spread_of_plague5 }
		add_manpower = -100000
	}
}

#### 经济危机加重 ####
SOV_worsen_investment_shortage = {
	if = {
		limit = { has_idea = SOV_foreign_investment5 }
		swap_ideas = {
			remove_idea = SOV_foreign_investment5
			add_idea = SOV_foreign_investment4
		}
	}
	else_if = {
		limit = { has_idea = SOV_foreign_investment4 }
		swap_ideas = {
			remove_idea = SOV_foreign_investment4
			add_idea = SOV_foreign_investment3
		}
	}
	else_if = {
		limit = { has_idea = SOV_foreign_investment3 }
		swap_ideas = {
			remove_idea = SOV_foreign_investment3
			add_idea = SOV_foreign_investment2
		}
	}
	else_if = {
		limit = { has_idea = SOV_foreign_investment2 }
		swap_ideas = {
			remove_idea = SOV_foreign_investment2
			add_idea = SOV_foreign_investment
		}
	}
	else_if = {
		limit = { has_idea = SOV_foreign_investment }
		SOV_pay_5_hundred = yes
	}
}

SOV_pay_5_hundred = {
	custom_effect_tooltip = SOV_we_need_ubs_save_500
	if = {
		limit = { 
			check_variable = { ubs_save > 500 }
		}
		add_to_variable = { ubs_save = -500 }
		custom_effect_tooltip = reduce_ubs_save_by_500
	}
	else = {
		set_temp_variable = { disbursement_5_hundred = 500 }
		subtract_from_temp_variable = { disbursement_5_hundred = ubs_save }
		set_variable = { ubs_save = 0 }
		add_to_variable = { ubs_load = disbursement_5_hundred }
		clear_variable = disbursement_5_hundred
		custom_effect_tooltip = SOV_debt_investment_tt
	}
}

SOV_pay_a_debt = {
	custom_effect_tooltip = SOV_pay_a_debt_tt
	if = {
		limit = { 
			check_variable = { ubs_save > SOV_debt }
		}
		subtract_from_temp_variable = { ubs_save = SOV_debt }
	}
	else = {
		subtract_from_temp_variable = { SOV_debt = ubs_save }
		set_variable = { ubs_save = 0 }
		add_to_variable = { ubs_load = SOV_debt }
		clear_variable = SOV_debt
	}
}

SOV_ease_investment_shortage = {
	if = {
		limit = { has_idea = SOV_foreign_investment }
		swap_ideas = {
			remove_idea = SOV_foreign_investment
			add_idea = SOV_foreign_investment2
		}
	}
	else_if = {
		limit = { has_idea = SOV_foreign_investment2 }
		swap_ideas = {
			remove_idea = SOV_foreign_investment2
			add_idea = SOV_foreign_investment3
		}
	}
	else_if = {
		limit = { has_idea = SOV_foreign_investment3 }
		swap_ideas = {
			remove_idea = SOV_foreign_investment3
			add_idea = SOV_foreign_investment4
		}
	}
	else_if = {
		limit = { has_idea = SOV_foreign_investment4 }
		swap_ideas = {
			remove_idea = SOV_foreign_investment4
			add_idea = SOV_foreign_investment5
		}
	}
	else = {
		remove_ideas = SOV_foreign_investment5
	}
}

#征粮！
SOV_exploitation_of_peasants = {
	if = {
		limit = {
			NOT = {
				has_idea = SOV_lack_of_food
				has_idea = SOV_lack_of_food2
				has_idea = SOV_lack_of_food3
			} 
		}
		add_ideas = SOV_lack_of_food
	}
	else_if = {
		limit = { has_idea = SOV_lack_of_food }
		swap_ideas = {
			remove_idea = SOV_lack_of_food
			add_idea = SOV_lack_of_food2
		}
	}
	else_if = {
		limit = { has_idea = SOV_lack_of_food2 }
		swap_ideas = {
			remove_idea = SOV_lack_of_food2
			add_idea = SOV_lack_of_food3
		}
	}
	else_if = {
		limit = { has_idea = SOV_lack_of_food3 }
		add_political_power = -15
		add_manpower = -10000
		random_country = {
			limit = {
				is_neighbor_of = ROOT
			}
			random_list = {
				30 = {
					add_manpower = 7541
				}
				25 = {
					add_manpower = 9542
				}
				45 = {
					add_manpower = 5358
				}
			}
		}
	}
}

SOV_allowance_of_peasants = {
	if = {
		limit = { has_idea = SOV_lack_of_food3 }
		swap_ideas = {
			remove_idea = SOV_lack_of_food3
			add_idea = SOV_lack_of_food2
		}
	}
	else_if = {
		limit = { has_idea = SOV_lack_of_food2 }
		swap_ideas = {
			remove_idea = SOV_lack_of_food2
			add_idea = SOV_lack_of_food
		}
	}
	else_if = {
		limit = { has_idea = SOV_lack_of_food }
		remove_ideas = SOV_lack_of_food
	}
}

SOV_incipient_land_reform_effect = {
	if = {
		limit = { has_idea = SOV_incipient_land_reform5 }
		swap_ideas = {
			remove_idea = SOV_incipient_land_reform5
			add_idea = SOV_incipient_land_reform4
		}
	}
	else_if = {
		limit = { has_idea = SOV_incipient_land_reform4 }
		swap_ideas = {
			remove_idea = SOV_incipient_land_reform4
			add_idea = SOV_incipient_land_reform3
		}
	}
	else_if = {
		limit = { has_idea = SOV_incipient_land_reform3 }
		swap_ideas = {
			remove_idea = SOV_incipient_land_reform3
			add_idea = SOV_incipient_land_reform2
		}
	}
	else_if = {
		limit = { has_idea = SOV_incipient_land_reform2 }
		swap_ideas = {
			remove_idea = SOV_incipient_land_reform2
			add_idea = SOV_incipient_land_reform
		}
	}
	else_if = {
		limit = { has_idea = SOV_incipient_land_reform }
		remove_ideas = SOV_incipient_land_reform
	}
}

#### 宣传鼓动部 ####
SOV_achievement_propaganda_counter_effect = {
	if = {
		limit = {
			check_variable = { var = propaganda_counter value = 1 compare = less_than }
		}
		set_variable = { var = propaganda_counter value = 1 } #setup variable
	}
	else = {
		add_to_variable = {
			propaganda_counter = 1
		}
	}
}
SOV_pick_propaganda_campaign_slot_effect = {
	hidden_effect = {
		if = {
			limit = {
				check_variable = { SOV_poster_left_icon_frame = SOV_propaganda_empty_slot_index }
			}
			set_variable = { SOV_poster_left_icon_frame = SOV_new_propaganda_campaign }
			#Ageing posters
			set_variable = { SOV_propaganda_left_poster_to_age = SOV_poster_left_icon_frame } #This is used to prevent the system to break if a propaganda campaign is cancelled
			hidden_effect = {
				country_event = { id = SOV_pub.101 days = 150 }
				#set_country_flag = { flag = SOV_propaganda_left_days_remaining_flag days = 150 } #Surprise! This doesnät work with vars :D  Maybe in the future
				if = { #Debug -> Faster time
					limit = {
						has_country_flag = SOV_debug_fast_propaganda_campaigns_flag
					}
					set_country_flag = { flag = SOV_propaganda_left_days_remaining_flag days = 5 }
				}
				else = { #Regular time
					set_country_flag = { flag = SOV_propaganda_left_days_remaining_flag days = 180 } #Need code support to use a var here
				}
			}
		}
		else_if = {
			limit = {
				check_variable = { SOV_poster_center_icon_frame = SOV_propaganda_empty_slot_index }
			}
			set_variable = { SOV_poster_center_icon_frame = SOV_new_propaganda_campaign }
			#Ageing posters
			set_variable = { SOV_propaganda_center_poster_to_age = SOV_poster_center_icon_frame } #This is used to prevent the system to break if a propaganda campaign is cancelled
			hidden_effect = {
				country_event = { id = SOV_pub.102 days = 150 }
				#set_country_flag = { flag = SOV_propaganda_center_days_remaining_flag days = 150 } #Surprise! This doesnät work with vars :D  Maybe in the future
				if = { #Debug -> Faster time
					limit = {
						has_country_flag = SOV_debug_fast_propaganda_campaigns_flag
					}
					set_country_flag = { flag = SOV_propaganda_center_days_remaining_flag days = 5 }
				}
				else = { #Regular time
					set_country_flag = { flag = SOV_propaganda_center_days_remaining_flag days = 180 } #Need code support to use a var here
				}
			}
		}
		else_if = {
			limit = {
				check_variable = { SOV_poster_right_icon_frame = SOV_propaganda_empty_slot_index }
			}
			set_variable = { SOV_poster_right_icon_frame = SOV_new_propaganda_campaign }
			#Ageing posters
			set_variable = { SOV_propaganda_right_poster_to_age = SOV_poster_right_icon_frame } #This is used to prevent the system to break if a propaganda campaign is cancelled
			hidden_effect = {
				country_event = { id = SOV_pub.103 days = 150 }
				#set_country_flag = { flag = SOV_propaganda_right_days_remaining_flag days = 150 } #Surprise! This doesnät work with vars :D  Maybe in the future
				if = { #Debug -> Faster time
					limit = {
						has_country_flag = SOV_debug_fast_propaganda_campaigns_flag
					}
					set_country_flag = { flag = SOV_propaganda_right_days_remaining_flag days = 5 }
				}
				else = { #Regular time
					set_country_flag = { flag = SOV_propaganda_right_days_remaining_flag days = 180 } #Need code support to use a var here
				}
			}
		}
		set_variable = { SOV_new_propaganda_campaign = 0 } # Reset var
		add_to_variable = { SOV_propaganda_campaigns_taken = 1 } #Update propaganda campaigns counter
	}
}
SOV_reset_propaganda_campaign_slot_effect = {
	hidden_effect = {
		if = {
			limit = {
				check_variable = { SOV_poster_left_icon_frame = SOV_propaganda_campaign_to_remove }
			}
			set_variable = { SOV_poster_left_icon_frame = SOV_propaganda_empty_slot_index }
			#Clear aged posters
			clear_variable = SOV_propaganda_left_poster_to_age
			clr_country_flag = SOV_propaganda_left_slot_is_old_flag
		}
		else_if = {
			limit = {
				check_variable = { SOV_poster_center_icon_frame = SOV_propaganda_campaign_to_remove }
			}
			set_variable = { SOV_poster_center_icon_frame = SOV_propaganda_empty_slot_index }
			#Clear aged posters
			clear_variable = SOV_propaganda_center_poster_to_age
			clr_country_flag = SOV_propaganda_center_slot_is_old_flag
		}
		else_if = { #This could be turned into an else, but leaving it like this to hopefully make it easier to see
			limit = {
				check_variable = { SOV_poster_right_icon_frame = SOV_propaganda_campaign_to_remove }
			}
			set_variable = { SOV_poster_right_icon_frame = SOV_propaganda_empty_slot_index }
			#Clear aged posters
			clear_variable = SOV_propaganda_right_poster_to_age
			clr_country_flag = SOV_propaganda_right_slot_is_old_flag
		}
		set_variable = { SOV_propaganda_campaign_to_remove = 0 } # Reset var
	}
}
SOV_unlock_propaganda_campaign_slot_effect = {
	hidden_effect = {
		if = {
			limit = {
				check_variable = { SOV_poster_left_icon_frame = SOV_propaganda_locked_slot_index }
			}
			set_variable = { SOV_poster_left_icon_frame = SOV_propaganda_empty_slot_index }
		}
		else_if = {
			limit = {
				check_variable = { SOV_poster_center_icon_frame = SOV_propaganda_locked_slot_index }
			}
			set_variable = { SOV_poster_center_icon_frame = SOV_propaganda_empty_slot_index }
		}
		else = {
			set_variable = { SOV_poster_right_icon_frame = SOV_propaganda_empty_slot_index }
		}
	}
}

SOV_disintegration_of_the_Soviet_Union = {

#西伯利亚
	every_state = {
		limit = { 
			has_state_flag = SIBZDQ 
			is_owned_by = SOV
		}
		transfer_state_to = SIB
		remove_core_of = SOV
	}
	release = SIB
	every_state = {
		limit = { has_state_flag = SIBZDQ }
		add_core_of = SIB
	}
	hidden_effect = {
		SIB = {
			SOV_exile_characters_to_SIB = yes
		}
	}
	#SIB = { change_tag_from = ROOT }
	SOV = {
		transfer_units_fraction = {
			target = SIB
			size = 0.5
			stockpile_ratio = 0.5
			army_ratio = 0.3
			air_ratio = 0.8
		}
	}
	inherit_technology = SOV
	set_research_slots = 3

#远东

	every_state = {
		limit = {
			has_state_flag = EAMZDQ
			is_owned_by = SOV
		}
		transfer_state_to = EAM
		remove_core_of = SOV
	}
	release = EAM
	every_state = {
		limit = { has_state_flag = EAMZDQ }
		add_core_of = EAM
	}
	SOV = {
		transfer_units_fraction = {
			target = EAM
			size = 0.25
			stockpile_ratio = 0.1
			army_ratio = 0.2
			air_ratio = 0.1
		}
	}
	inherit_technology = SOV
	set_research_slots = 3
	hidden_effect = {
		EAM = {
			SOV_exile_characters_to_EAM = yes
		}
	}

#中亚

	if = {
		limit = { country_exists = TAM }
		TAM = {
			transfer_state = 404
			transfer_state = 810
			transfer_state = 590
			transfer_state = 402
			transfer_state = 406
		}
	}
	else = {
		every_state = {
			limit = { has_state_flag = TAMZDQ }
			transfer_state_to = TAM
			remove_core_of = SOV
		}
		release = EAM
		every_state = {
			limit = { has_state_flag = TAMZDQ }
			add_core_of = TAM
		}
		SOV = {
			transfer_units_fraction = {
				target = TAM
				size = 0.2
				stockpile_ratio = 0.2
				army_ratio = 0.1
				air_ratio = 0.1
			}
		}
		inherit_technology = SOV
		set_research_slots = 2
		TAM = { 
			every_enemy_country = {
				white_peace = PREV
			}
		}
	}
	TAM = { 
		leave_faction = yes
		set_politics = {
			ruling_party = neutrality
		}
	}

}

SOV_exile_characters_to_SIB = {
	every_possible_country = {
		every_character = {
			limit = {
				OR = {
					is_character = SOV_Willow
					has_character_flag = SOV_military_academy_club_character
					has_character_flag = SOV_magical_society_club_character
					has_character_flag = SOV_political_academy_club_character
					has_character_flag = SOV_Talulah_club_character
				}
			}
			set_nationality = SIB
		}
	}
	SIB = {
		SOV_Willow = {
			promote_character = socialism
		}
		SOV_Nanoha = {
			add_country_leader_role = {
				country_leader = {
					ideology = moderatism
				}
			}
			promote_leader = yes
		}
		SOV_Katyusha = {
			add_country_leader_role = {
				country_leader = {
					ideology = stalinism
				}
			}
			promote_leader = yes
		}
		SOV_Yelena = {
			add_country_leader_role = {
				country_leader = {
					ideology = fascism_ideology
				}
			}
			promote_leader = yes
		}
		set_politics = {
			ruling_party = democratic
		}
	}
}

SOV_exile_characters_to_EAM = {
	every_possible_country = {
		every_character = {
			limit = {
				has_character_flag = SOV_ship_maidens_club_character
			}
			set_nationality = EAM
		}
	}
	EAM = {
		SOV_Rossiya = {
			add_country_leader_role = {
				country_leader = {
					ideology = despotism
				}
			}
			promote_leader = yes
		}
		SOV_Avrora = {
			add_country_leader_role = {
				country_leader = {
					ideology = marxism
					traits = { SOV_sound_of_new_era }
				}
				promote_leader = yes
			}
		}
		set_politics = {
			ruling_party = communism
		}

		add_popularity = {
			ideology = communism
			popularity = 0.5
		}

		SOV_Avrora = {
			add_advisor_role = {
				advisor = {
					slot = political_advisor
					cost = 150
					idea_token = SOV_Avrora_1 
					traits = { SWI_commander_in_chief }
				}
			}
		}
	
		SOV_Kirov = {
			#基洛芙
			add_corps_commander_role = {
				skill = 3
				traits = { armor_officer career_officer winter_specialist }
				attack_skill = 3
				defense_skill = 3
				planning_skill = 3
				logistics_skill = 4
			}
		}
	
		SOV_Chkalov = {
			#契卡洛芙
			add_corps_commander_role = {
				skill = 2
				traits = { career_officer winter_specialist }
				attack_skill = 3
				defense_skill = 2
				planning_skill = 2
				logistics_skill = 3
			}
		}
	
		SOV_Chapaev = {
			#恰巴耶芙
			add_corps_commander_role = {
				skill = 2
				traits = { bearer_of_artillery inflexible_strategist winter_specialist }
				attack_skill = 2
				defense_skill = 3
				planning_skill = 3
				logistics_skill = 4
			}
		}
	
		SOV_Tashkent = {
			#塔什干
			add_advisor_role = {
				advisor = {
					idea_token = SOV_Tashkent_1
					slot = air_chief
					traits = { air_chief_safety_3 }
					cost = 100
				}
			}
			add_advisor_role = {
				advisor = {
					idea_token = SOV_Tashkent_2
					slot = theorist
					traits = { air_warfare_theorist }
					cost = 100
				}
			}
		}
	
		SOV_Rossiya = {
			#罗西亚
			add_field_marshal_role = {
				traits = { brilliant_strategist armor_officer career_officer trait_reckless }
				skill = 4
				attack_skill = 5
				defense_skill = 4
				planning_skill = 4
				logistics_skill = 2
			}
			add_advisor_role = {
				advisor = {
					idea_token = SOV_Rossiya_1
					slot = army_chief
					traits = { army_chief_organizational_3 }
					cost = 100
				}
			}
		}
	
		SOV_Belorussiya = {
			#贝拉罗斯
			add_corps_commander_role = {
				traits = { career_officer winter_specialist }
				skill = 4
				attack_skill = 4
				defense_skill = 3
				planning_skill = 2
				logistics_skill = 4
			}
			add_advisor_role = {
				advisor = {
					slot = political_advisor
					cost = 150
					idea_token = SOV_Belorussiya_1 
					traits = { red_army_organizer }
				}
			}
		}
	
		SOV_Volg = {
			#伏尔加
			add_advisor_role = {
				advisor = {
					slot = theorist
					cost = 100
					idea_token = SOV_Volg_1 
					traits = { military_theorist }
				}
			}
		}
	
		SOV_Grozny = {
			add_corps_commander_role = {
				skill = 2
				traits = { infantry_officer winter_specialist trait_engineer }
				attack_skill = 3
				defense_skill = 2
				planning_skill = 2
				logistics_skill = 4
			}
			add_advisor_role = {
				advisor = {
					slot = high_command
					cost = 100
					idea_token = SOV_Grozny_1 
					traits = { army_infantry_2 }
				}
			}
		}
		
		SOV_Minsk = {
			add_corps_commander_role = {
				skill = 2
				traits = { career_officer winter_specialist trickster }
				attack_skill = 2
				defense_skill = 3
				planning_skill = 2
				logistics_skill = 4
			}
			add_advisor_role = {
				advisor = {
					slot = high_command
					cost = 100
					idea_token = SOV_Minsk_1 
					traits = { army_commando_2 }
				}
			}
		}
	
		SOV_Gangut = {
			add_corps_commander_role = {
				skill = 2
				traits = { career_officer winter_specialist brilliant_strategist }
				attack_skill = 3
				defense_skill = 3
				planning_skill = 2
				logistics_skill = 4
			}
			add_advisor_role = {
				advisor = {
					slot = high_command
					cost = 100
					idea_token = SOV_Gangut_1 
					traits = { army_logistics_3 }
				}
			}
		}
	
		SOV_Kiev = {
			add_corps_commander_role = {
				skill = 1
				traits = { career_officer winter_specialist }
				attack_skill = 1
				defense_skill = 1
				planning_skill = 2
				logistics_skill = 1
			}
			add_advisor_role = {
				advisor = {
					slot = political_advisor
					cost = 150
					idea_token = SOV_Kiev_1 
					traits = { left_trade_unionist }
				}
			}
		}
	
		SOV_Murmansk = {
			add_corps_commander_role = {
				skill = 2
				traits = { career_officer winter_specialist trait_cautious }
				attack_skill = 2
				defense_skill = 2
				planning_skill = 2
				logistics_skill = 1
			}
			add_advisor_role = {
				advisor = {
					slot = political_advisor
					cost = 150
					idea_token = SOV_Murmansk_1 
					traits = { peoples_commissar_for_posts_and_telegraphs }
				}
			}
		}
	
		SOV_Stremitelny = {
			add_corps_commander_role = {
				skill = 1
				traits = { career_officer winter_specialist trait_reckless }
				attack_skill = 2
				defense_skill = 1
				planning_skill = 1
				logistics_skill = 1
			}
			add_advisor_role = {
				advisor = {
					slot = political_advisor
					cost = 150
					idea_token = SOV_Stremitelny_1 
					traits = { industry_reformer }
				}
			}
		}
	}
}

SOV_new_members_join_comecon = {
	hidden_effect = {
		add_to_variable = {
			global.num_comecon_member = 1
		}
		add_to_array = {
			array = global.comecon_member
			value = ROOT
		}
		add_to_variable = {
			ubs_save = 50
		}
		if = {
			limit = {
				is_in_array = { 
					array = global.comecon_member
					value = SOV
				}
			}
			remove_from_array = { global.comecon_member = SOV }
		}
	}
	custom_effect_tooltip = get_fifty_units_of_currency_tt
}

SOV_members_remove_comecon = {
	hidden_effect = {
		add_to_variable = {
			global.num_comecon_member = -1
		}
		remove_from_array = { global.comecon_member = ROOT }
	}
}

gain_comintern_arms_aid = {
	hidden_effect = {
		set_temp_variable = { comintern_rifle_aid = 2500 }
		set_temp_variable = { comintern_gun_aid = 300 }
		set_temp_variable = { comintern_members_riflen_aid = 500 }
		set_temp_variable = { comintern_members_gun_aid = 100 }
		multiply_temp_variable  = { comintern_members_riflen_aid = FROM.num_faction_members }
		multiply_temp_variable  = { comintern_members_gun_aid = FROM.num_faction_members }
		add_to_temp_variable = { comintern_rifle_aid = comintern_members_riflen_aid }
		add_to_temp_variable = { comintern_gun_aid = comintern_members_gun_aid }	
	}
	add_equipment_to_stockpile = {
		type = infantry_equipment
		amount = var:comintern_rifle_aid
		producer = SOV
	}
	add_equipment_to_stockpile = {
		type = artillery_equipment
		amount = var:comintern_members_gun_aid
		producer = SOV
	}
}

SOV_flexible_economic_policy = {
	if = {
		limit = { 
			date < 1941.1.1
			has_political_power < 200 
		}
		set_variable = { SOV.ubs_to_pp = 10 }
	}
	else = {
		set_variable = { SOV.ubs_to_pp = -10 }
	}

	if = {
		limit = { 
			date > 1940.1.1
		}
		set_variable = { SOV.pp_to_ubs = 1 }
	}
	else = {
		set_variable = { SOV.pp_to_ubs = -10 }
	}

	if = {
		limit = { 
			OR = {
				has_completed_focus = SOV_enlarge_cultivated_land
				check_variable = { ubs_save > 1000 }
			}
		}
		set_variable = { SOV.ubs_to_civ = 10 }
	}
	else = {
		set_variable = { SOV.ubs_to_civ = -10 }
	}

	if = {
		limit = { 
			has_completed_focus = SOV_enlarge_cultivated_land
		}
		set_variable = { SOV.ubs_to_build_speed = 10 }
	}
	else = {
		set_variable = { SOV.ubs_to_build_speed = -10 }
	}

	if = {
		limit = { 
			has_stability < 0.8
		}
		set_variable = { SOV.ubs_to_stability = 1 }
	}
	else = {
		set_variable = { SOV.ubs_to_stability = -10 }
	}

	if = {
		limit = { 
			has_war_support < 0.8
		}
		set_variable = { SOV.ubs_to_ws = 1 }
	}
	else = {
		set_variable = { SOV.ubs_to_ws = -10 }
	}
}

SOV_great_patriotic_war_effect = {
	if = {
		limit = { surrender_progress > 0.50 }
		set_variable = { SOV_GPW_army_core_defence_factor = 0.35 }
		set_variable = { SOV_GPW_army_core_attack_factor = 0.35 }
		set_variable = { SOV_GPW_dig_in_speed_factor = 0.5 }
		set_variable = { SOV_GPW_max_dig_in = 10.0 }
		set_variable = { SOV_GPW_army_org_factor = 0.25 }
		set_variable = { SOV_GPW_training_time_army_factor = -0.5 }
		set_variable = { SOV_GPW_minimum_training_level = -0.3 }
		set_variable = { SOV_GPW_supply_consumption_factor = -0.15 }
		set_variable = { SOV_GPW_production_factory_max_efficiency_factor = 0.30 }
		set_variable = { SOV_GPW_production_factory_efficiency_gain_factor = 0.30 }
	}
	else_if = {
		limit = { surrender_progress > 0.40 }
		set_variable = { SOV_GPW_army_core_defence_factor = 0.20 }
		set_variable = { SOV_GPW_army_core_attack_factor = 0.20 }
		set_variable = { SOV_GPW_dig_in_speed_factor = 0.25 }
		set_variable = { SOV_GPW_max_dig_in = 8.0 }
		set_variable = { SOV_GPW_army_org_factor = 0.15 }
		set_variable = { SOV_GPW_training_time_army_factor = -0.20 }
		set_variable = { SOV_GPW_minimum_training_level = -0.2 }
		set_variable = { SOV_GPW_supply_consumption_factor = -0.10 }
		set_variable = { SOV_GPW_production_factory_max_efficiency_factor = 0.15 }
		set_variable = { SOV_GPW_production_factory_efficiency_gain_factor = 0.15 }
	}
	else_if = {
		limit = { surrender_progress > 0.30 }
		set_variable = { SOV_GPW_army_core_defence_factor = 0.20 }
		set_variable = { SOV_GPW_army_core_attack_factor = 0.20 }
		set_variable = { SOV_GPW_dig_in_speed_factor = 0.25 }
		set_variable = { SOV_GPW_max_dig_in = 5.0 }
		set_variable = { SOV_GPW_army_org_factor = 0.10 }
		set_variable = { SOV_GPW_training_time_army_factor = -0.15 }
		set_variable = { SOV_GPW_minimum_training_level = 0 }
		set_variable = { SOV_GPW_supply_consumption_factor = -0.05 }
		set_variable = { SOV_GPW_production_factory_max_efficiency_factor = 0.10 }
		set_variable = { SOV_GPW_production_factory_efficiency_gain_factor = 0.10 }
	}
	else_if = {
		limit = { surrender_progress > 0.20 }
		set_variable = { SOV_GPW_army_core_defence_factor = 0.15 }
		set_variable = { SOV_GPW_army_core_attack_factor = 0.15 }
		set_variable = { SOV_GPW_dig_in_speed_factor = 0.20 }
		set_variable = { SOV_GPW_max_dig_in = 5.0 }
		set_variable = { SOV_GPW_army_org_factor = 0.10 }
		set_variable = { SOV_GPW_training_time_army_factor = -0.10 }
		set_variable = { SOV_GPW_minimum_training_level = 0 }
		set_variable = { SOV_GPW_supply_consumption_factor = 0 }
		set_variable = { SOV_GPW_production_factory_max_efficiency_factor = 0.05 }
		set_variable = { SOV_GPW_production_factory_efficiency_gain_factor = 0.10 }
	}
	else_if = {
		limit = { surrender_progress > 0.10 }
		set_variable = { SOV_GPW_army_core_defence_factor = 0.10 }
		set_variable = { SOV_GPW_army_core_attack_factor = 0.10 }
		set_variable = { SOV_GPW_dig_in_speed_factor = 0.15 }
		set_variable = { SOV_GPW_max_dig_in = 3 }
		set_variable = { SOV_GPW_army_org_factor = 0.05 }
		set_variable = { SOV_GPW_training_time_army_factor = 0 }
		set_variable = { SOV_GPW_minimum_training_level = 0 }
		set_variable = { SOV_GPW_supply_consumption_factor = 0 }
		set_variable = { SOV_GPW_production_factory_max_efficiency_factor = 0 }
		set_variable = { SOV_GPW_production_factory_efficiency_gain_factor = 0 }
	}
	else_if = {
		limit = { surrender_progress > 0.05 }
		set_variable = { SOV_GPW_army_core_defence_factor = 0.05 }
		set_variable = { SOV_GPW_army_core_attack_factor = 0.05 }
		set_variable = { SOV_GPW_dig_in_speed_factor = 0.10 }
		set_variable = { SOV_GPW_max_dig_in = 0 }
		set_variable = { SOV_GPW_army_org_factor = 0 }
		set_variable = { SOV_GPW_training_time_army_factor = 0 }
		set_variable = { SOV_GPW_minimum_training_level = 0 }
		set_variable = { SOV_GPW_supply_consumption_factor = 0 }
		set_variable = { SOV_GPW_production_factory_max_efficiency_factor = 0 }
		set_variable = { SOV_GPW_production_factory_efficiency_gain_factor = 0 }
	}
	else_if = {
		limit = { surrender_progress < 0.02 }
		set_variable = { SOV_GPW_army_core_defence_factor = 0 }
		set_variable = { SOV_GPW_army_core_attack_factor = 0 }
		set_variable = { SOV_GPW_dig_in_speed_factor = 0 }
		set_variable = { SOV_GPW_max_dig_in = 0 }
		set_variable = { SOV_GPW_army_org_factor = 0 }
		set_variable = { SOV_GPW_training_time_army_factor = 0 }
		set_variable = { SOV_GPW_minimum_training_level = 0 }
		set_variable = { SOV_GPW_supply_consumption_factor = 0 }
		set_variable = { SOV_GPW_production_factory_max_efficiency_factor = 0 }
		set_variable = { SOV_GPW_production_factory_efficiency_gain_factor = 0 }
	}

}

willow_AI_add_design_base_plate = {
	#ai设计底板
	create_equipment_variant = {
		name = "AI-small-1" #
		type = small_plane_airframe_1
		modules = {
			fixed_main_weapon_slot = heavy_mg_4x
			fixed_auxiliary_weapon_slot_1 = heavy_mg_4x
			engine_type_slot = engine_2_1x
			special_type_slot_1 = empty
		}
		obsolete = yes
	}

	create_equipment_variant = {
		name = "AI-small-2" #
		type = small_plane_airframe_2
		modules = {
			fixed_main_weapon_slot = heavy_mg_4x
			fixed_auxiliary_weapon_slot_1 = heavy_mg_4x
			engine_type_slot = engine_2_1x
			special_type_slot_1 = empty
		}
		obsolete = yes
	}
	
	create_equipment_variant = {
		name = "AI-small-3" #
		type = small_plane_airframe_3
		modules = {
			fixed_main_weapon_slot = heavy_mg_4x
			fixed_auxiliary_weapon_slot_1 = heavy_mg_4x
			engine_type_slot = engine_2_1x
			special_type_slot_1 = empty
		}
		obsolete = yes
	}
	
	create_equipment_variant = {
		name = "AI-small-4" #
		type = small_plane_airframe_4
		modules = {
			fixed_main_weapon_slot = heavy_mg_4x
			fixed_auxiliary_weapon_slot_1 = heavy_mg_4x
			engine_type_slot = engine_2_1x
			special_type_slot_1 = empty
		}
		obsolete = yes
	}

	create_equipment_variant = {
		name = "AI-cas-1" #
		type = small_plane_airframe_1
		modules = {
			fixed_main_weapon_slot = bomb_locks
			fixed_auxiliary_weapon_slot_1 = bomb_locks
			engine_type_slot = engine_2_2x
			special_type_slot_1 = empty
		}
		obsolete = yes
	}
	
	create_equipment_variant = {
		name = "AI-cas-2" #
		type = small_plane_airframe_2
		modules = {
			fixed_main_weapon_slot = heavy_bomb_locks
			fixed_auxiliary_weapon_slot_1 = heavy_bomb_locks
			engine_type_slot = engine_2_2x
			special_type_slot_1 = empty
		}
		obsolete = yes
	}
	
	create_equipment_variant = {
		name = "AI-cas-3" #
		type = small_plane_airframe_3
		modules = {
			fixed_main_weapon_slot = heavy_bomb_locks
			fixed_auxiliary_weapon_slot_1 = heavy_bomb_locks
			engine_type_slot = engine_2_2x
			special_type_slot_1 = empty
		}
		obsolete = yes
	}
	
	create_equipment_variant = {
		name = "AI-cas-4" #
		type = small_plane_airframe_4
		modules = {
			fixed_main_weapon_slot = heavy_bomb_locks
			fixed_auxiliary_weapon_slot_1 = heavy_bomb_locks
			engine_type_slot = engine_2_2x
			special_type_slot_1 = empty
		}
		obsolete = yes
	}

	create_equipment_variant = {
		name = "AI-large-4" #
		type = large_plane_airframe_1
		modules = {
			fixed_main_weapon_slot = large_bomb_bay
			fixed_auxiliary_weapon_slot_1 = empty
			engine_type_slot = engine_2_4x
			special_type_slot_1 = empty
		}
		obsolete = yes
	}

	create_equipment_variant = {
		name = "AI-large-5" #
		type = large_plane_airframe_2
		modules = {
			fixed_main_weapon_slot = large_bomb_bay
			fixed_auxiliary_weapon_slot_1 = empty
			engine_type_slot = engine_2_4x
			special_type_slot_1 = empty
		}
		obsolete = yes
	}

	create_equipment_variant = {
		name = "AI-large-6" #
		type = large_plane_airframe_3
		modules = {
			fixed_main_weapon_slot = large_bomb_bay
			fixed_auxiliary_weapon_slot_1 = empty
			engine_type_slot = engine_2_4x
			special_type_slot_1 = empty
		}
		obsolete = yes
	}
	
	create_equipment_variant = {
		name = "AI-large-7" #
		type = large_plane_airframe_4
		modules = {
			fixed_main_weapon_slot = large_bomb_bay
			fixed_auxiliary_weapon_slot_1 = empty
			engine_type_slot = engine_2_4x
			special_type_slot_1 = empty
		}
		obsolete = yes
	}

	create_equipment_variant = {
		name = "AI-medium-1" #
		type = medium_plane_airframe_1
		modules = {
			fixed_main_weapon_slot = medium_bomb_bay
			fixed_auxiliary_weapon_slot_1 = bomb_locks
			engine_type_slot = engine_2_2x
			special_type_slot_1 = empty
		}
		obsolete = yes
	}
	
	create_equipment_variant = {
		name = "AI-medium-1" #
		type = medium_plane_airframe_2
		modules = {
			fixed_main_weapon_slot = medium_bomb_bay
			fixed_auxiliary_weapon_slot_1 = bomb_locks
			engine_type_slot = engine_2_2x
			special_type_slot_1 = empty
		}
		obsolete = yes
	}

	create_equipment_variant = {
		name = "AI-medium-1" #
		type = medium_plane_airframe_3
		modules = {
			fixed_main_weapon_slot = medium_bomb_bay
			fixed_auxiliary_weapon_slot_1 = bomb_locks
			engine_type_slot = engine_2_2x
			special_type_slot_1 = empty
		}
		obsolete = yes
	}

	create_equipment_variant = {
		name = "AI-medium-1" #
		type = medium_plane_airframe_4
		modules = {
			fixed_main_weapon_slot = medium_bomb_bay
			fixed_auxiliary_weapon_slot_1 = bomb_locks
			engine_type_slot = engine_2_2x
			special_type_slot_1 = empty
		}
		obsolete = yes
	}
}