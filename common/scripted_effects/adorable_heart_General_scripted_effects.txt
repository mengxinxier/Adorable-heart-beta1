AHG_test_effect = {
	load_focus_tree = MEOIL_remake_oil_treaty
}

Economy_act_level_up = {
	if = {
		limit = {
			has_idea = civilian_economy
		}
		swap_ideas = {
			remove_idea = civilian_economy
			add_idea = low_economic_mobilisation
		}
	}
	else_if = {
		limit = {
			has_idea = low_economic_mobilisation
		}
		swap_ideas = {
			remove_idea = low_economic_mobilisation
			add_idea = partial_economic_mobilisation
		}
	}
	else_if = {
		limit = {
			has_idea = partial_economic_mobilisation
		}
		swap_ideas = {
			remove_idea = partial_economic_mobilisation
			add_idea = war_economy
		}
	}
	else_if = {
		limit = {
			has_idea = war_economy
		}
		swap_ideas = {
			remove_idea = war_economy
			add_idea = tot_economic_mobilisation
		}
	}
	else_if = {
		limit = {
			has_idea = tot_economic_mobilisation
		}
		add_political_power = 150
	}
}

Economy_act_level_down = {
	if = {
		limit = {
			has_idea = tot_economic_mobilisation
		}
		swap_ideas = {
			remove_idea = tot_economic_mobilisation
			add_idea = war_economy
		}
	}
	else_if = {
		limit = {
			has_idea = war_economy
		}
		swap_ideas = {
			remove_idea = war_economy
			add_idea = partial_economic_mobilisation
		}
	}
	else_if = {
		limit = {
			has_idea = partial_economic_mobilisation
		}
		swap_ideas = {
			remove_idea = partial_economic_mobilisation
			add_idea = low_economic_mobilisation
		}
	}
	else_if = {
		limit = {
			has_idea = low_economic_mobilisation
		}
		swap_ideas = {
			remove_idea = low_economic_mobilisation
			add_idea = civilian_economy
		}
	}
	else_if = {
		limit = {
			has_idea = civilian_economy
		}
		add_political_power = 150
	}
}

Manpower_act_level_up = {
	if = {
		limit = {
			has_idea = disarmed_nation
		}
		swap_ideas = {
			remove_idea = disarmed_nation
			add_idea = volunteer_only
		}
	}
	else_if = {
		limit = {
			has_idea = volunteer_only
		}
		swap_ideas = {
			remove_idea = volunteer_only
			add_idea = limited_conscription
		}
	}
	else_if = {
		limit = {
			has_idea = limited_conscription
		}
		swap_ideas = {
			remove_idea = limited_conscription
			add_idea = extensive_conscription
		}
	}
	else_if = {
		limit = {
			has_idea = extensive_conscription
		}
		swap_ideas = {
			remove_idea = extensive_conscription
			add_idea = service_by_requirement
		}
	}
	else_if = {
		limit = {
			has_idea = service_by_requirement
		}
		add_political_power = 150
	}
}

Manpower_act_level_up_completely = {
	if = {
		limit = {
			has_idea = disarmed_nation
		}
		swap_ideas = {
			remove_idea = disarmed_nation
			add_idea = volunteer_only
		}
	}
	else_if = {
		limit = {
			has_idea = volunteer_only
		}
		swap_ideas = {
			remove_idea = volunteer_only
			add_idea = limited_conscription
		}
	}
	else_if = {
		limit = {
			has_idea = limited_conscription
		}
		swap_ideas = {
			remove_idea = limited_conscription
			add_idea = extensive_conscription
		}
	}
	else_if = {
		limit = {
			has_idea = extensive_conscription
		}
		swap_ideas = {
			remove_idea = extensive_conscription
			add_idea = service_by_requirement
		}
	}
	else_if = {
		limit = {
			has_idea = service_by_requirement
		}
		swap_ideas = {
			remove_idea = service_by_requirement
			add_idea = all_adults_serve
		}
	}
	else_if = {
		limit = {
			has_idea = all_adults_serve
		}
		swap_ideas = {
			remove_idea = all_adults_serve
			add_idea = scraping_the_barrel
		}
	}
	else_if = {
		limit = {
			has_idea = scraping_the_barrel
		}
		add_political_power = 150
	}
}

Manpower_act_level_down = {
	if = {
		limit = {
			has_idea = scraping_the_barrel
		}
		swap_ideas = {
			remove_idea = scraping_the_barrel
			add_idea = all_adults_serve
		}
	}
	else_if = {
		limit = {
			has_idea = all_adults_serve
		}
		swap_ideas = {
			remove_idea = all_adults_serve
			add_idea = service_by_requirement
		}
	}
	else_if = {
		limit = {
			has_idea = service_by_requirement
		}
		swap_ideas = {
			remove_idea = service_by_requirement
			add_idea = extensive_conscription
		}
	}
	else_if = {
		limit = {
			has_idea = extensive_conscription
		}
		swap_ideas = {
			remove_idea = extensive_conscription
			add_idea = limited_conscription
		}
	}
	else_if = {
		limit = {
			has_idea = limited_conscription
		}
		swap_ideas = {
			remove_idea = limited_conscription
			add_idea = volunteer_only
		}
	}
	else_if = {
		limit = {
			has_idea = volunteer_only
		}
		swap_ideas = {
			remove_idea = volunteer_only
			add_idea = disarmed_nation
		}
	}
	else_if = {
		limit = {
			has_idea = disarmed_nation
		}
		add_political_power = 150
	}
}

Trade_act_level_up = {
	if = {
		limit = {
			has_idea = closed_economy
		}
		swap_ideas = {
			remove_idea = closed_economy
			add_idea = limited_exports
		}
	}
	else_if = {
		limit = {
			has_idea = limited_exports
		}
		swap_ideas = {
			remove_idea = limited_exports
			add_idea = export_focus
		}
	}
	else_if = {
		limit = {
			has_idea = export_focus
		}
		swap_ideas = {
			remove_idea = export_focus
			add_idea = free_trade
		}
	}
	else_if = {
		limit = {
			has_idea = free_trade
		}
		add_political_power = 150
	}
}

Trade_act_level_down = {
	if = {
		limit = {
			has_idea = free_trade
		}
		swap_ideas = {
			remove_idea = free_trade
			add_idea = export_focus
		}
	}
	else_if = {
		limit = {
			has_idea = export_focus
		}
		swap_ideas = {
			remove_idea = export_focus
			add_idea = limited_exports
		}
	}
	else_if = {
		limit = {
			has_idea = limited_exports
		}
		swap_ideas = {
			remove_idea = limited_exports
			add_idea = closed_economy
		}
	}
	else_if = {
		limit = {
			has_idea = closed_economy
		}
		add_political_power = 150
	}
}

state_category_level_up = {
	if = {
		limit = { has_state_category = zero_island }
		set_state_category = one
	}
	else_if = {
		limit = { has_state_category = one_island }
		set_state_category = one
	}
	else_if = {
		limit = { has_state_category = wasteland }
		set_state_category = one
	}
	else_if = {
		limit = { has_state_category = zero }
		set_state_category = one
	}
	else_if = {
		limit = { has_state_category = one }
		set_state_category = two
	}
	else_if = {
		limit = { has_state_category = two }
		set_state_category = three
	}
	else_if = {
		limit = { has_state_category = three }
		set_state_category = four
	}
	else_if = {
		limit = { has_state_category = four }
		set_state_category = five
	}
	else_if = {
		limit = { has_state_category = five }
		set_state_category = six
	}
	else_if = {
		limit = { has_state_category = six }
		set_state_category = seven
	}
	else_if = {
		limit = { has_state_category = seven }
		set_state_category = eight
	}
	else_if = {
		limit = { has_state_category = eight }
		set_state_category = nine
	}
	else_if = {
		limit = { has_state_category = nine }
		set_state_category = ten
	}
	else_if = {
		limit = { has_state_category = ten }
		set_state_category = eleven
	}
	else_if = {
		limit = { has_state_category = eleven }
		set_state_category = twelve
	}
	else_if = {
		limit = { has_state_category = twelve }
		add_manpower = 1000
	}
}

state_category_level_down = {
	if = {
		limit = { has_state_category = zero }
		add_manpower = -2000
	}
	else_if = {
		limit = { has_state_category = one }
		add_manpower = -1000
	}
	else_if = {
		limit = { has_state_category = two }
		set_state_category = one
	}
	else_if = {
		limit = { has_state_category = three }
		set_state_category = two
	}
	else_if = {
		limit = { has_state_category = four }
		set_state_category = three
	}
	else_if = {
		limit = { has_state_category = five }
		set_state_category = four
	}
	else_if = {
		limit = { has_state_category = six }
		set_state_category = five
	}
	else_if = {
		limit = { has_state_category = seven }
		set_state_category = six
	}
	else_if = {
		limit = { has_state_category = eight }
		set_state_category = seven
	}
	else_if = {
		limit = { has_state_category = nine }
		set_state_category = eight
	}
	else_if = {
		limit = { has_state_category = ten }
		set_state_category = nine
	}
	else_if = {
		limit = { has_state_category = eleven }
		set_state_category = ten
	}
	else_if = {
		limit = { has_state_category = twelve }
		set_state_category = eleven
	}
}

this_character_remove_all_role = { #Not used in ~
	if = {
		limit = { is_advisor = yes }
		remove_advisor_role = { slot = political_advisor }
	}
	if = {
		limit = { is_theorist = yes }
		remove_advisor_role = { slot = theorist }
	}
	if = {
		limit = { is_army_chief = yes }
		remove_advisor_role = { slot = army_chief }
	}
	if = {
		limit = { is_navy_chief = yes }
		remove_advisor_role = { slot = navy_chief }
	}
	if = {
		limit = { is_air_chief = yes }
		remove_advisor_role = { slot = air_chief }
	}
	if = {
		limit = { is_high_command = yes }
		remove_advisor_role = { slot = high_command }
	}
}

reload_focus_tree = {
	mark_focus_tree_layout_dirty = yes
	custom_effect_tooltip = global_modifier_focus_tree_tt
}

every_country_reload_focus_tree = {
	every_country = {
		mark_focus_tree_layout_dirty = yes
	}
}

HCP_banknote_printing_small = {
	add_to_variable = { ubs_save = 100 tooltip = HCP_banknote_printing_small_tt }
}

HCP_banknote_printing_medium = {
	add_to_variable = { ubs_save = 200 tooltip = HCP_banknote_printing_medium_tt }
}

HCP_banknote_printing_large = {
	add_to_variable = { ubs_save = 300 tooltip = HCP_banknote_printing_large_tt }
}

HCP_add_banknote_50 = {
	add_to_variable = { ubs_save = 50 tooltip = HCP_add_banknote_50_tt }
}

HCP_add_banknote_100 = {
	add_to_variable = { ubs_save = 100 tooltip = HCP_add_banknote_100_tt }
}

HCP_add_banknote_125 = {
	add_to_variable = { ubs_save = 125 tooltip = HCP_add_banknote_125_tt }
}

HCP_add_banknote_150 = {
	add_to_variable = { ubs_save = 150 tooltip = HCP_add_banknote_150_tt }
}

HCP_add_banknote_175 = {
	add_to_variable = { ubs_save = 175 tooltip = HCP_add_banknote_175_tt }
}

HCP_add_banknote_200 = {
	add_to_variable = { ubs_save = 200 tooltip = HCP_add_banknote_200_tt }
}

HCP_subtract_banknote_50 = {
	custom_effect_tooltip = HCP_subtract_banknote_50_tt
	hidden_effect = {
		if = {
			limit = { check_variable = { ubs_save > 49.999 } }
			subtract_from_variable = { ubs_save = 50 tooltip = HCP_subtract_banknote_50_tt }
		}
		else = {
			set_variable = { UBS_temp_var = 50 }
			AH_UBS_fiscal_deficit = yes
		}
	}
}

HCP_subtract_banknote_100 = {
	custom_effect_tooltip = HCP_subtract_banknote_100_tt
	hidden_effect = {
		if = {
			limit = { check_variable = { ubs_save > 99.999 } }
			subtract_from_variable = { ubs_save = 100 tooltip = HCP_subtract_banknote_100_tt }
		}
		else = {
			set_variable = { UBS_temp_var = 100 }
			AH_UBS_fiscal_deficit = yes
		}
	}
}

HCP_subtract_banknote_125 = {
	custom_effect_tooltip = HCP_subtract_banknote_125_tt
	hidden_effect = {
		if = {
			limit = { check_variable = { ubs_save > 124.999 } }
			subtract_from_variable = { ubs_save = 125 tooltip = HCP_subtract_banknote_125_tt }
		}
		else = {
			set_variable = { UBS_temp_var = 125 }
			AH_UBS_fiscal_deficit = yes
		}
	}
}

HCP_subtract_banknote_150 = {
	custom_effect_tooltip = HCP_subtract_banknote_150_tt
	hidden_effect = {
		if = {
			limit = { check_variable = { ubs_save > 149.999 } }
			subtract_from_variable = { ubs_save = 150 tooltip = HCP_subtract_banknote_150_tt }
		}
		else = {
			set_variable = { UBS_temp_var = 150 }
			AH_UBS_fiscal_deficit = yes
		}
	}
}

HCP_subtract_banknote_175 = {
	custom_effect_tooltip = HCP_subtract_banknote_175_tt
	hidden_effect = {
		if = {
			limit = { check_variable = { ubs_save > 174.999 } }
			subtract_from_variable = { ubs_save = 175 tooltip = HCP_subtract_banknote_175_tt }
		}
		else = {
			set_variable = { UBS_temp_var = 175 }
			AH_UBS_fiscal_deficit = yes
		}
	}
}

HCP_subtract_banknote_200 = {
	custom_effect_tooltip = HCP_subtract_banknote_200_tt
	hidden_effect = {
		if = {
			limit = { check_variable = { ubs_save > 199.999 } }
			subtract_from_variable = { ubs_save = 200 tooltip = HCP_subtract_banknote_175_tt }
		}
		else = {
			set_variable = { UBS_temp_var = 200 }
			AH_UBS_fiscal_deficit = yes
		}
	}
}

AH_UBS_fiscal_deficit = {
	subtract_from_variable = { UBS_temp_var = ubs_save }
	set_variable = { ubs_save = 0 }
	add_to_variable = { ubs_load = UBS_temp_var }
	clear_variable = UBS_temp_var
}

white_peace_with_every_enemy_country = {
	every_enemy_country = {
		white_peace = {
			tag = ROOT
			message = white_peace_with_every_enemy_country_tt
		}
	}
}

check_economy_law = {
	clear_variable = economy_law_penalty_var
	if = {
		limit = { has_idea = civilian_economy }
		set_variable = { economy_law_penalty_var = 1 }
	}
	else_if = {
		limit = { has_idea = low_economic_mobilisation }
		set_variable = { economy_law_penalty_var = 0.75 }
	}
	else_if = {
		limit = { has_idea = partial_economic_mobilisation }
		set_variable = { economy_law_penalty_var = 0.50 }
	}
	else_if = {
		limit = { has_idea = war_economy }
		set_variable = { economy_law_penalty_var = 0.25 }
	}
	else_if = {
		limit = { has_idea = tot_economic_mobilisation }
		set_variable = { economy_law_penalty_var = 0 }
	}
	else = { set_variable = { economy_law_penalty_var = 0 } }
}

calculate_mobilisation_penalty_effect = {
	set_variable = { mobilisation_penalty_var = num_actual_common_divisions }
	divide_variable = { mobilisation_penalty_var = 1000 }
	multiply_variable = { mobilisation_penalty_var = economy_law_penalty_var }
	divide_variable = { mobilisation_penalty_var = mobilisation_penalty_ratio_var }
	
#	clamp_variable = {
#		var = mobilisation_penalty_var
#		min = -0.25
#		max = 0.25
#	}
#Theoretically, there is no penalty limit, waiting for player feedback	
	
	set_variable = { mobilisation_penalty_var_positive = mobilisation_penalty_var }

	#for negative effects
	multiply_variable = { mobilisation_penalty_var = -1 }
}

unit_limit_common_battalions_calculation_effect = {
	clear_variable = base_common_units
	set_variable = { base_common_units = num_battalions }
	subtract_from_variable = { base_common_units = num_battalions_with_type@marine }
	subtract_from_variable = { base_common_units = num_battalions_with_type@mountaineers }
	subtract_from_variable = { base_common_units = num_battalions_with_type@paratrooper }
	subtract_from_variable = { base_common_units = num_battalions_with_type@fake_intel_unit }
	subtract_from_variable = { base_common_units = num_battalions_with_type@irregular_infantry }
	subtract_from_variable = { base_common_units = num_battalions_with_type@militia }
	subtract_from_variable = { base_common_units = num_battalions_with_type@magic_assault }
	subtract_from_variable = { base_common_units = num_battalions_with_type@magic_artillery }
	subtract_from_variable = { base_common_units = num_battalions_with_type@unit_helicoptery }
	subtract_from_variable = { base_common_units = num_battalions_with_type@anti_air }
	subtract_from_variable = { base_common_units = num_battalions_with_type@anti_tank }
	subtract_from_variable = { base_common_units = num_battalions_with_type@artillery }
	subtract_from_variable = { base_common_units = num_battalions_with_type@rocket_artillery }
	subtract_from_variable = { base_common_units = num_battalions_with_type@blackshirt_assault_battalion }
	subtract_from_variable = { base_common_units = num_battalions_with_type@engineer }
	subtract_from_variable = { base_common_units = num_battalions_with_type@field_hospital }
	subtract_from_variable = { base_common_units = num_battalions_with_type@light_flame_tank }
	subtract_from_variable = { base_common_units = num_battalions_with_type@medium_flame_tank }
	subtract_from_variable = { base_common_units = num_battalions_with_type@heavy_flame_tank }
	subtract_from_variable = { base_common_units = num_battalions_with_type@logistics_company }
	subtract_from_variable = { base_common_units = num_battalions_with_type@maintenance_company }
	subtract_from_variable = { base_common_units = num_battalions_with_type@military_police }
	subtract_from_variable = { base_common_units = num_battalions_with_type@signal_company }
	subtract_from_variable = { base_common_units = num_battalions_with_type@recon }
	subtract_from_variable = { base_common_units = num_battalions_with_type@mot_recon }
	subtract_from_variable = { base_common_units = num_battalions_with_type@armored_car_recon }
	subtract_from_variable = { base_common_units = num_battalions_with_type@light_tank_recon }
#	for_each_scope_loop = {
#		array = global.indu_countries
#		if = {
#			limit = {
#				received_expeditionary_forces = { sender = PREV value > 0 }
#			}
#			set_temp_variable = { expeditionary_division_sent_temp = 0 }
#			while_loop_effect = {
#				limit = {
#					received_expeditionary_forces = { sender = PREV value > expeditionary_division_sent_temp }
#				}
#				add_to_temp_variable = { expeditionary_division_sent_temp = 1 }
#			}
#			add_to_variable = { PREV.num_expeditionary_divisions_sent = expeditionary_division_sent_temp }
#		}
#	}
#	add_to_variable = { base_common_units = num_expeditionary_divisions_sent }
#It seems that he only takes effect on division, and it is unclear how to take effect on the battalion.
#This is a mechanism vulnerability that AI may use, but it is not recommended for players to use.
	
	set_variable = { num_actual_common_divisions = base_common_units }
	
	check_economy_law = yes
	
	if = {
		limit = { has_dynamic_modifier = { modifier = GRE_mobilisation_penalty_modifier } }
		if = {
			limit = { is_ai = yes }
			clear_variable = mobilisation_penalty_var
			clear_variable = mobilisation_penalty_var_positive
			remove_dynamic_modifier = { modifier = GRE_mobilisation_penalty_modifier }
		}
		else = { calculate_mobilisation_penalty_effect = yes }
	}
	else_if = {
		limit = { is_ai = no }
		calculate_mobilisation_penalty_effect = yes
		add_dynamic_modifier = { modifier = GRE_mobilisation_penalty_modifier }
	}
	
}

remove_mobilisation_penalty_modifier_effect = {
	clear_variable = mobilisation_penalty_var
	clear_variable = mobilisation_penalty_var_positive
	if = {
		limit = { has_dynamic_modifier = { modifier = GRE_mobilisation_penalty_modifier } }
		remove_dynamic_modifier = { modifier = GRE_mobilisation_penalty_modifier }
	}
}

print_num_battalions = {
	log = "num_battalions [?num_battalions]"
	log = "num_battalions_num_actual_common_divisions [?num_actual_common_divisions|.2]"
	log = "num_battalions_engineer [?num_battalions_with_type@engineer|.2]"
}



faction_collapse_member_peace_effect = {
	leave_faction = yes
	#Step one: peace out with any faction leaders who aren't neighbours of/invading PREV or claiming PREV territory
	save_event_target_as = peace_country
	every_enemy_country = {
		limit = {
			is_faction_leader = yes
			OR = {
				capital_scope = {
					is_island_region = yes
				}
				same_continent_as_PREV = no
			}
			NOT = {
				civilwar_target = PREV				#do not peace out civil wars
				PREV = {
					OR = {
						any_home_area_neighbor_country = {
							tag = PREV.PREV
						}
						#== invading
						any_owned_state = {
							OR = {
								is_core_of = PREV.PREV
								is_claimed_by = PREV.PREV
							}
						}
					}
				}
				any_allied_country = {
					event_target:peace_country = {
						OR = {
							any_home_area_neighbor_country = {
								tag = PREV.PREV
							}
							#== invading
							any_owned_state = {
								OR = {
									is_core_of = PREV.PREV
									is_claimed_by = PREV.PREV
								}
							}
						}
					}
				}
			}
		}
		white_peace = PREV
	}
	#Step two: peace out with any factionless non-neighbours not on the same continent who aren't invading PREV or claiming PREV territory
	every_enemy_country = {
		limit = {
			is_in_faction = no
			is_subject = no
			has_capitulated = no
			OR = {
				capital_scope = {
					is_island_region = yes
				}
				same_continent_as_PREV = no
			}
			NOT = {
				civilwar_target = PREV				#do not peace out civil wars
				PREV = {
					OR = {
						any_home_area_neighbor_country = {
							#== invading
							OR = {
								tag = PREV.PREV
								is_subject_of = PREV.PREV
							}
						}
						any_owned_state = {
							OR = {
								is_core_of = PREV.PREV
								is_claimed_by = PREV.PREV
							}
						}
					}
				}
				any_subject_country = {
					event_target:peace_country = {
						OR = {
							any_home_area_neighbor_country = {
								#== invading
								OR = {
									tag = PREV.PREV
									is_subject_of = PREV.PREV
								}
							}
							any_owned_state = {
								OR = {
									is_core_of = PREV.PREV
									is_claimed_by = PREV.PREV
								}
							}
						}
					}
				}
			}
		}
		white_peace = PREV
	}
}

transfer_int_upgrade = {
	hidden_effect = {
		### agency ###
		if = {
			limit = {
				NOT = {
					has_intelligence_agency = yes
				}
				PREV = {
					has_intelligence_agency = yes
				}
			}
			create_intelligence_agency = yes
		}
		### branch_intelligence ###
		if = {
			limit = {
				NOT = {
					has_done_agency_upgrade = upgrade_economy_civilian
				}
				PREV = {
					has_done_agency_upgrade = upgrade_economy_civilian
				}
			}
			upgrade_intelligence_agency = upgrade_economy_civilian
		}
		if = {
			limit = {
				NOT = {
					has_done_agency_upgrade = upgrade_army_department
				}
				PREV = {
					has_done_agency_upgrade = upgrade_army_department
				}
			}
			upgrade_intelligence_agency = upgrade_army_department
		}
		if = {
			limit = {
				NOT = {
					has_done_agency_upgrade = upgrade_naval_department
				}
				PREV = {
					has_done_agency_upgrade = upgrade_naval_department
				}
			}
			upgrade_intelligence_agency = upgrade_naval_department
		}
		if = {
			limit = {
				NOT = {
					has_done_agency_upgrade = upgrade_airforce_department
				}
				PREV = {
					has_done_agency_upgrade = upgrade_airforce_department
				}
			}
			upgrade_intelligence_agency = upgrade_airforce_department
		}
		### branch_defense ###
		if = {
			limit = {
				NOT = {
					has_done_agency_upgrade = upgrade_passive_defense
				}
				PREV = {
					has_done_agency_upgrade = upgrade_passive_defense
				}
			}
			upgrade_intelligence_agency = upgrade_passive_defense
		}
		if = {
			limit = {
				NOT = {
					has_done_agency_upgrade = upgrade_anti_partisan
				}
				PREV = {
					has_done_agency_upgrade = upgrade_anti_partisan
				}
			}
			upgrade_intelligence_agency = upgrade_anti_partisan
		}
		### branch_operation ###
		if = {
			limit = {
				NOT = {
					has_done_agency_upgrade = upgrade_blueprint_stealing
				}
				PREV = {
					has_done_agency_upgrade = upgrade_blueprint_stealing
				}
			}
			upgrade_intelligence_agency = upgrade_blueprint_stealing
		}
		if = {
			limit = {
				NOT = {
					has_done_agency_upgrade = upgrade_portable_radios
				}
				PREV = {
					has_done_agency_upgrade = upgrade_portable_radios
				}
			}
			upgrade_intelligence_agency = upgrade_portable_radios
		}
		if = {
			limit = {
				NOT = {
					has_done_agency_upgrade = upgrade_invisible_ink
				}
				PREV = {
					has_done_agency_upgrade = upgrade_invisible_ink
				}
			}
			upgrade_intelligence_agency = upgrade_invisible_ink
		}
		if = {
			limit = {
				NOT = {
					has_done_agency_upgrade = upgrade_plastic_explosives
				}
				PREV = {
					has_done_agency_upgrade = upgrade_plastic_explosives
				}
			}
			upgrade_intelligence_agency = upgrade_plastic_explosives
		}
		if = {
			limit = {
				NOT = {
					has_done_agency_upgrade = upgrade_suicide_pills
				}
				PREV = {
					has_done_agency_upgrade = upgrade_suicide_pills
				}
			}
			upgrade_intelligence_agency = upgrade_suicide_pills
		}
		### branch_operative ###
		if = {
			limit = {
				NOT = {
					has_done_agency_upgrade = upgrade_training_centers
				}
				PREV = {
					has_done_agency_upgrade = upgrade_training_centers
				}
			}
			upgrade_intelligence_agency = upgrade_training_centers
		}
		if = {
			limit = {
				NOT = {
					has_done_agency_upgrade = upgrade_commando_training
				}
				PREV = {
					has_done_agency_upgrade = upgrade_commando_training
				}
			}
			upgrade_intelligence_agency = upgrade_commando_training
		}
		if = {
			limit = {
				NOT = {
					has_done_agency_upgrade = upgrade_interrogation_techniques
				}
				PREV = {
					has_done_agency_upgrade = upgrade_interrogation_techniques
				}
			}
			upgrade_intelligence_agency = upgrade_interrogation_techniques
		}
		if = {
			limit = {
				NOT = {
					has_done_agency_upgrade = upgrade_diplo_training
				}
				PREV = {
					has_done_agency_upgrade = upgrade_diplo_training
				}
			}
			upgrade_intelligence_agency = upgrade_diplo_training
		}
		if = {
			limit = {
				NOT = {
					has_done_agency_upgrade = upgrade_psycho_warfare
				}
				PREV = {
					has_done_agency_upgrade = upgrade_psycho_warfare
				}
			}
			upgrade_intelligence_agency = upgrade_psycho_warfare
		}
		### branch_crypto ###
		if = {
			limit = {
				NOT = {
					has_done_agency_upgrade = upgrade_form_department
				}
				PREV = {
					has_done_agency_upgrade = upgrade_form_department
				}
			}
			upgrade_intelligence_agency = upgrade_form_department
		}
		if = {
			limit = {
				NOT = {
					has_done_agency_upgrade = upgrade_decryption_boost
				}
				PREV = {
					has_done_agency_upgrade = upgrade_decryption_boost
				}
			}
			upgrade_intelligence_agency = upgrade_decryption_boost
		}
		if = {
			limit = {
				NOT = {
					has_done_agency_upgrade = upgrade_decryption_boost_2
				}
				PREV = {
					has_done_agency_upgrade = upgrade_decryption_boost_2
				}
			}
			upgrade_intelligence_agency = upgrade_decryption_boost_2
		}
		if = {
			limit = {
				NOT = {
					has_done_agency_upgrade = upgrade_crypto_strength
				}
				PREV = {
					has_done_agency_upgrade = upgrade_crypto_strength
				}
			}
			upgrade_intelligence_agency = upgrade_crypto_strength
		}
		if = {
			limit = {
				NOT = {
					has_done_agency_upgrade = upgrade_crypto_strength_2
				}
				PREV = {
					has_done_agency_upgrade = upgrade_crypto_strength_2
				}
			}
			upgrade_intelligence_agency = upgrade_crypto_strength_2
		}
	}
}

change_to_war_economy = {
	if = {
		limit = {
			has_idea = undisturbed_isolation
		}
		swap_ideas = {
			remove_idea = undisturbed_isolation
			add_idea = war_economy
		}
	}
	else_if = {
		limit = {
			has_idea = isolation
		}
		swap_ideas = {
			remove_idea = isolation
			add_idea = war_economy
		}
	}
	else_if = {
		limit = {
			has_idea = wanglingjingji
		}
		swap_ideas = {
			remove_idea = wanglingjingji
			add_idea = war_economy
		}
	}
	else_if = {
		limit = {
			has_idea = civilian_economy
		}
		swap_ideas = {
			remove_idea = civilian_economy
			add_idea = war_economy
		}
	}
	else_if = {
		limit = {
			has_idea = low_economic_mobilisation
		}
		swap_ideas = {
			remove_idea = low_economic_mobilisation
			add_idea = war_economy
		}
	}
	else_if = {
		limit = {
			has_idea = partial_economic_mobilisation
		}
		swap_ideas = {
			remove_idea = partial_economic_mobilisation
			add_idea = war_economy
		}
	}
	else = {
		add_ideas = war_economy
	}
}

ah_music_start = {
	if = {
		limit = {
			has_global_flag = AH_music_on
		}
		if = {
			limit = {
				tag = SOV
			}
			scoped_play_song = "牢不可破的联盟"
		}
		if = {
			limit = {
				tag = ENG
			}
			scoped_play_song = "不列颠万岁（日语版）"
		}
		if = {
			limit = {
				tag = GER
			}
			scoped_play_song = "Das Lied der Deutschen"
		}
		if = {
			limit = {
				OR = {
					tag = FRA
					tag = KMK
				}
			}
			scoped_play_song = "众神眷恋的幻想乡"
		}
	}
}

add_core_of_ROOT = {
	if = {
		limit = {
			is_claimed_by = ROOT
		}
		remove_claim_by = ROOT
	}
	add_core_of = ROOT
}

#计算太空竞赛
generate_Space_race_rankings = {
	clear_array = global.Space_race_countries
	every_country = {
		limit = {
			has_country_flag = add_to_Space_Race
			has_tech = rocket_engines
			NOT = {
				or = {
					tag = DVL
					tag = RJE
				}
			}
		}
		add_to_array = {
			global.Space_race_countries = THIS
		}
	}
	get_sorted_scored_countries = {
		scorer = Space_race_scorer
		array = global.Space_race_countries
	}
	# Set up ranking positions
	for_each_scope_loop = {
		array = global.Space_race_countries
		add_to_variable = {
			global.Space_race_countries_index = 1
		}
		set_variable = {
			Space_race_ranking = global.Space_race_countries_index
		}
	}
	clear_variable = global.Space_race_countries_index
}

increase_state_category_by_one_level = {
	if = {
		limit = { has_state_category = zero }
		set_state_category = one
	}
	if = {
		limit = { has_state_category = one }
		set_state_category = two
	}
	else_if = {
		limit = { has_state_category = two }
		set_state_category = three
	}
	else_if = {
		limit = { has_state_category = three }
		set_state_category = four
	}
	else_if = {
		limit = { has_state_category = four }
		set_state_category = five
	}
	else_if = {
		limit = { has_state_category = five }
		set_state_category = six
	}
	else_if = {
		limit = { has_state_category = six }
		set_state_category = seven
	}
	else_if = {
		limit = { has_state_category = seven }
		set_state_category = eight
	}
	else_if = {
		limit = { has_state_category = eight }
		set_state_category = nine
	}
	else_if = {
		limit = { has_state_category = nine }
		set_state_category = ten
	}
	else_if = {
		limit = { has_state_category = ten }
		set_state_category = eleven
	}
	else_if = {
		limit = { has_state_category = eleven }
		set_state_category = twelve
	}
	else = { add_extra_state_shared_building_slots = 1 }
	#custom_effect_tooltip = increase_state_category_by_one_level_tt
}

clear_volunteers_to_PREV = {
	if = {
		limit = { has_country_flag = sent_volunteers_@PREV }
		#clear flag
		clr_country_flag = sent_volunteers_@PREV

		#lock volunteers diplo action if no other volunteers
		subtract_from_variable = { send_volunteers_count = 1 }

		#remove strategies
		log = "[THIS.GetName]: removed volunteer desire to [PREV.GetName]"
		add_ai_strategy = {
			type = send_volunteers_desire
			id = PREV
			value = -400
		}
		add_ai_strategy = {
			type = send_lend_lease_desire
			id = PREV
			value = -400
		}
		add_ai_strategy = {
			type = send_lend_lease_desire
			id = PREV
			value = -200
		}
		add_ai_strategy = {
			type = support
			id = PREV
			value = -200
		}
	}
}